# PACKAGE: MINUET THERMOSTAT PRESET
#
# Initializes a thermostat preset and its associated user-configurable settings.
#
# Variables:
#   - Set 'minuet_thermostat_preset_id' to the preset id
#   - Set 'minuet_thermostat_preset_name' to the human-readable name of the preset
#   - Set 'minuet_thermostat_preset_default_temperature' to the default temperature
#   - Set 'minuet_thermostat_preset_default_fan_mode' to the default fan mode: Auto, Quiet, Low, or Off
#   - Set 'minuet_thermostat_preset_default_lid_mode' to the default lid mode: Auto, Open, Closed
defaults:
  minuet_thermostat_preset_id: home
  minuet_thermostat_preset_name: "Home"
  minuet_thermostat_preset_default_temperature: "78°F"
  minuet_thermostat_preset_default_fan_mode: "Auto"
  minuet_thermostat_preset_default_lid_mode: "Auto"
select:
  - id: minuet_thermostat_preset_${minuet_thermostat_preset_id}_fan_mode_setting
    platform: template
    name: "Thermostat preset ${minuet_thermostat_preset_name} fan mode"
    entity_category: config
    optimistic: true
    options:
      - "Auto"
      - "Quiet"
      - "Low"
      - "Off"
    initial_option: "${minuet_thermostat_preset_default_fan_mode}"
    restore_value: true
    on_value:
      then:
        - script.execute: minuet_thermostat_preset_${minuet_thermostat_preset_id}_change
  - id: minuet_thermostat_preset_${minuet_thermostat_preset_id}_lid_mode_setting
    platform: template
    name: "Thermostat preset ${minuet_thermostat_preset_name} lid mode"
    entity_category: config
    optimistic: true
    options:
      - "Auto"
      - "Open"
      - "Closed"
    initial_option: "${minuet_thermostat_preset_default_lid_mode}"
    restore_value: true
    on_value:
      then:
        - script.execute: minuet_thermostat_preset_${minuet_thermostat_preset_id}_change
number:
  - id: minuet_thermostat_preset_${minuet_thermostat_preset_id}_temperature_setting
    name: "Thermostat preset ${minuet_thermostat_preset_name} temperature"
    icon: mdi:thermometer-auto
    entity_category: config
    device_class: temperature
    unit_of_measurement: °C
    mode: box
    platform: template
    optimistic: true
    min_value: ${minuet_to_celsius_macro}${to_celsius(minuet_thermostat_min_temperature)}
    max_value: ${minuet_to_celsius_macro}${to_celsius(minuet_thermostat_max_temperature)}
    step: ${minuet_to_celsius_macro}${to_celsius(minuet_thermostat_visual_temperature_step)}
    initial_value: ${minuet_to_celsius_macro}${to_celsius(minuet_thermostat_preset_default_temperature)}
    restore_value: true
    on_value:
      then:
        - script.execute: minuet_thermostat_preset_${minuet_thermostat_preset_id}_change
script:
  - id: minuet_thermostat_preset_${minuet_thermostat_preset_id}_change
    then:
      - lambda: |-
          constexpr const ClimateFanMode FAN_MODES[] = {
            ClimateFanMode::CLIMATE_FAN_AUTO,
            ClimateFanMode::CLIMATE_FAN_QUIET,
            ClimateFanMode::CLIMATE_FAN_LOW,
            ClimateFanMode::CLIMATE_FAN_OFF,
          };
          minuet::set_thermostat_preset_config(ClimatePreset::CLIMATE_PRESET_${minuet_thermostat_preset_id | upper()},
              ClimateMode::CLIMATE_MODE_COOL,
              FAN_MODES[id(minuet_thermostat_preset_${minuet_thermostat_preset_id}_fan_mode_setting).active_index().value_or(0)],
              minuet::LidMode(id(minuet_thermostat_preset_${minuet_thermostat_preset_id}_lid_mode_setting).active_index().value_or(0)),
              id(minuet_thermostat_preset_${minuet_thermostat_preset_id}_temperature_setting).state);
