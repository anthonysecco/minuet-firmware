# MINUET FIRMWARE
#
# This is the ESPHome firmware configuration for Minuet.
# You are free to customize the firmware as you like.
#
# Refer to https://github.com/brown-studios/minuet-firmware for instructions.

# Give your device a name.
esphome:
  name: minuet
  friendly_name: Minuet
  comment: "Minuet fan controller"
  name_add_mac_suffix: true

# Configure the logger.
#
# Set `baud_rate` to 0 to disable serial port log output and improve performance.
# Set `baud_rate` to 921600 to enable serial port log output for debugging.
logger:
  level: DEBUG
  baud_rate: 0

# The configuration is organized into ESPHome packages that group related configuration
# elements together for ease of maintenance.  Follow the instructions in the comments
# to configure each package for your installation of Minuet.  You can comment out
# (or delete) sections that you don't need.
packages:
  ### PACKAGE COLLECTION: CORE
  #
  # Configures the hardware and implements core features.
  #
  # Variables:
  #   - Set `minuet_board_version` according to the silkscreen label on your
  #     Minuet circuit board, e.g. 'v3_0'.
  <<: !include
    file: minuet/core.yaml
    vars:
      minuet_board_version: 'v3_0'

  ### PACKAGE COLLECTION: ACCESSORIES
  #
  # If you have attached an accessory to the Minuet EXPANSION port, configure it here.
  # At most one accessory can be configured because there is only one port.
  # You can comment out this section if you have no accessories.
  #
  # Refer to the documentation in the files included from here.

  # Minuet light accessory with an addressable LED strip connected to it.
  <<: !include
    file: minuet/accessory/light/addressable.yaml
    vars:
      minuet_light_accessory_board_version: 'v3_0'
      minuet_led_strip: 'btf_sk6812_rgbw_60'

  # Minuet light accessory with a PWM dimmable light connected to it.
  # <<: !include
  #   file: minuet/accessory/light/dimmable.yaml
  #   vars:
  #     minuet_light_accessory_board_version: 'v3_0'

  ### PACKAGE: NETWORK
  #
  # In the default factory firmware, the WiFi radio is disabled on boot and remains
  # switched OFF until the user enables the WiFi radio.
  #
  # When the WiFi radio is enabled, Minuet will attempt to connect to the WiFi network using
  # the provided SSID and password (if any).  If Minuet cannot connect after 1 minute,
  # then it will start its own access point using the built-in 'ap' credentials and it
  # will serve a captive portal to let the user provide the WiFi SSID and password.
  #
  # To require Minuet to connect to a specific WiFi network, uncomment the `networks`
  # section and specify the SSID and password for your WiFi network in `secrets.yaml`
  # then comment out the `ap` and `captive_portal` sections.  Set `fast_connect` to true
  # to connect to your network more quickly or to connect to hidden networks.
  #
  # The WiFi radio consumes negligible power when connected to a network as a client.
  # The WiFi radio consumes about 250 mW when operating in access point mode.
  #
  # To improve security and reliability while traveling or when you have integrated Minuet
  # with Home Assistant, it's a good idea to require Minuet to only ever connect to your own
  # WiFi network and disable access point mode.  Never expose Minuet to the public Internet!
  #
  # Of course, you can configure the network any way you like.
  minuet_network:
    # WiFi radio configuration
    # Refer to https://esphome.io/components/wifi/
    wifi:
      id: minuet_wifi
      power_save_mode: light
      reboot_timeout: 0s
      # networks:
      #   - ssid: !secret wifi_ssid
      #     password: !secret wifi_password
      #     hidden: false
      # fast_connect: true
      ap:
        ssid: !secret minuet_access_point_ssid
        password: !secret minuet_access_point_password
        ap_timeout: 1min

    # Captive portal: asks you to provide WiFi credentials if none have been configured
    # Refer to https://esphome.io/components/captive_portal/
    #
    # Navigate to http://192.168.4.1/ to set up WiFi credentials after connecting
    # to the access point using the credentials specified in the `ap` section above.
    captive_portal:

    # WiFi switch: lets you enable or disable the WiFi radio.
    # The initial behavior of the WiFi switch depends on the restore mode.
    #
    # Variables:
    #   - Set `minuet_wifi_switch_restore_mode` to configure the state of the WiFi radio
    #     on power up and after a factory reset.  Use one of the following values:
    #     - RESTORE_DEFAULT_OFF: Restores the WiFi switch state from persistent storage
    #                              and set it to OFF by default after a factory reset.
    #     - RESTORE_DEFAULT_ON:  Restores the WiFi switch state from persistent storage
    #                              and set it to ON by default after a factory reset.
    #     - ALWAYS_OFF:          Sets the WiFi switch state to OFF on power up.
    #     - ALWAYS_ON:           Sets the WiFi switch state to ON on power up.
    <<: !include
      file: minuet/wifi-switch.yaml
      vars:
        minuet_wifi_switch_restore_mode: RESTORE_DEFAULT_OFF

  ### PACKAGE: LOCAL NETWORK ACCESS
  #
  # These components allow Minuet to be accessed over the local network which is assumed
  # to be a private network.  Note that Minuet is not intended to be exposed to the public
  # Internet and it does not offer cloud services for remote access.
  #
  # The `ota` component lets Minuet accept authenticated over-the-air firmware updates.
  # Minuet firmware never updates itself automatically.  You can compile the firmware and
  # initiate an over-the-air software update using the ESPHome Builder.  To disable this
  # feature, comment out the `ota` section.
  #
  # The `api` component lets Minuet accept authenticated API requests from software on your
  # local network such as the ESPHome Builder and Home Assistant.  Use this to let these
  # programs control Minuet and retrieve logs.  To disable this feature, comment out the
  # `api` section.
  #
  # The `web_server` component lets you access the built-in web dashboard.  It is primarily
  # a debugging tool and you can use it to control the fan and read the logs.  It may be
  # useful for controlling the device from your phone if you aren't integrating Minuet
  # with Home Assistant.  Consider disabling `captive_portal` when you use `web_server`
  # because the captive portal can interfere with accessing the web server.
  minuet_access:
    # OTA component: accepts authenticated over-the-air firmware updates from the local network
    # Refer to https://esphome.io/components/ota/
    ota:
      - platform: esphome
        password: !secret minuet_over_the_air_update_password

    # API component: accepts authenticated API requests from the local network
    # Refer to https://esphome.io/components/api/
    api:
      encryption:
        key: !secret minuet_api_encryption_key
      reboot_timeout: 0s

    # Web server: lets you control Minuet and view logs from the local network
    # Refer to https://esphome.io/components/web_server/
    # web_server:
    #   local: true
    #   log: true
    #   version: 3

  ### PACKAGE: CUSTOM
  #
  # Declare components for any extra hardware that you have attached to Minuet.
  # Refer to https://esphome.io/components/
  my_package:
    sensor:
      # Example: SCD4x carbon dioxide, temperature, and relative humidity sensor
      # - platform: scd4x
      #   co2:
      #     name: 'Cabin CO2'
      #   temperature:
      #     name: 'Cabin Temperature'
      #   humidity:
      #     name: 'Cabin Humidity'
